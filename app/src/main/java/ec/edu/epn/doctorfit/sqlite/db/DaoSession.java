package ec.edu.epn.doctorfit.sqlite.db;

import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import ec.edu.epn.doctorfit.sqlite.db.Usuario;
import ec.edu.epn.doctorfit.sqlite.db.Estado;
import ec.edu.epn.doctorfit.sqlite.db.EstadoDeseado;
import ec.edu.epn.doctorfit.sqlite.db.AlimentacionSedentarismo;
import ec.edu.epn.doctorfit.sqlite.db.Consejo;
import ec.edu.epn.doctorfit.sqlite.db.Dieta;
import ec.edu.epn.doctorfit.sqlite.db.Platillo;
import ec.edu.epn.doctorfit.sqlite.db.Alimento;

import ec.edu.epn.doctorfit.sqlite.db.UsuarioDao;
import ec.edu.epn.doctorfit.sqlite.db.EstadoDao;
import ec.edu.epn.doctorfit.sqlite.db.EstadoDeseadoDao;
import ec.edu.epn.doctorfit.sqlite.db.AlimentacionSedentarismoDao;
import ec.edu.epn.doctorfit.sqlite.db.ConsejoDao;
import ec.edu.epn.doctorfit.sqlite.db.DietaDao;
import ec.edu.epn.doctorfit.sqlite.db.PlatilloDao;
import ec.edu.epn.doctorfit.sqlite.db.AlimentoDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig usuarioDaoConfig;
    private final DaoConfig estadoDaoConfig;
    private final DaoConfig estadoDeseadoDaoConfig;
    private final DaoConfig alimentacionSedentarismoDaoConfig;
    private final DaoConfig consejoDaoConfig;
    private final DaoConfig dietaDaoConfig;
    private final DaoConfig platilloDaoConfig;
    private final DaoConfig alimentoDaoConfig;

    private final UsuarioDao usuarioDao;
    private final EstadoDao estadoDao;
    private final EstadoDeseadoDao estadoDeseadoDao;
    private final AlimentacionSedentarismoDao alimentacionSedentarismoDao;
    private final ConsejoDao consejoDao;
    private final DietaDao dietaDao;
    private final PlatilloDao platilloDao;
    private final AlimentoDao alimentoDao;

    public DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        usuarioDaoConfig = daoConfigMap.get(UsuarioDao.class).clone();
        usuarioDaoConfig.initIdentityScope(type);

        estadoDaoConfig = daoConfigMap.get(EstadoDao.class).clone();
        estadoDaoConfig.initIdentityScope(type);

        estadoDeseadoDaoConfig = daoConfigMap.get(EstadoDeseadoDao.class).clone();
        estadoDeseadoDaoConfig.initIdentityScope(type);

        alimentacionSedentarismoDaoConfig = daoConfigMap.get(AlimentacionSedentarismoDao.class).clone();
        alimentacionSedentarismoDaoConfig.initIdentityScope(type);

        consejoDaoConfig = daoConfigMap.get(ConsejoDao.class).clone();
        consejoDaoConfig.initIdentityScope(type);

        dietaDaoConfig = daoConfigMap.get(DietaDao.class).clone();
        dietaDaoConfig.initIdentityScope(type);

        platilloDaoConfig = daoConfigMap.get(PlatilloDao.class).clone();
        platilloDaoConfig.initIdentityScope(type);

        alimentoDaoConfig = daoConfigMap.get(AlimentoDao.class).clone();
        alimentoDaoConfig.initIdentityScope(type);

        usuarioDao = new UsuarioDao(usuarioDaoConfig, this);
        estadoDao = new EstadoDao(estadoDaoConfig, this);
        estadoDeseadoDao = new EstadoDeseadoDao(estadoDeseadoDaoConfig, this);
        alimentacionSedentarismoDao = new AlimentacionSedentarismoDao(alimentacionSedentarismoDaoConfig, this);
        consejoDao = new ConsejoDao(consejoDaoConfig, this);
        dietaDao = new DietaDao(dietaDaoConfig, this);
        platilloDao = new PlatilloDao(platilloDaoConfig, this);
        alimentoDao = new AlimentoDao(alimentoDaoConfig, this);

        registerDao(Usuario.class, usuarioDao);
        registerDao(Estado.class, estadoDao);
        registerDao(EstadoDeseado.class, estadoDeseadoDao);
        registerDao(AlimentacionSedentarismo.class, alimentacionSedentarismoDao);
        registerDao(Consejo.class, consejoDao);
        registerDao(Dieta.class, dietaDao);
        registerDao(Platillo.class, platilloDao);
        registerDao(Alimento.class, alimentoDao);
    }
    
    public void clear() {
        usuarioDaoConfig.getIdentityScope().clear();
        estadoDaoConfig.getIdentityScope().clear();
        estadoDeseadoDaoConfig.getIdentityScope().clear();
        alimentacionSedentarismoDaoConfig.getIdentityScope().clear();
        consejoDaoConfig.getIdentityScope().clear();
        dietaDaoConfig.getIdentityScope().clear();
        platilloDaoConfig.getIdentityScope().clear();
        alimentoDaoConfig.getIdentityScope().clear();
    }

    public UsuarioDao getUsuarioDao() {
        return usuarioDao;
    }

    public EstadoDao getEstadoDao() {
        return estadoDao;
    }

    public EstadoDeseadoDao getEstadoDeseadoDao() {
        return estadoDeseadoDao;
    }

    public AlimentacionSedentarismoDao getAlimentacionSedentarismoDao() {
        return alimentacionSedentarismoDao;
    }

    public ConsejoDao getConsejoDao() {
        return consejoDao;
    }

    public DietaDao getDietaDao() {
        return dietaDao;
    }

    public PlatilloDao getPlatilloDao() {
        return platilloDao;
    }

    public AlimentoDao getAlimentoDao() {
        return alimentoDao;
    }

}
